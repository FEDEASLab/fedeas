# used by distribution scripts

cmp: {}

Basic:
  General_Functions: &Basic-General_Functions
    ? 'A_matrix.m'
    ? 'B_matrix'
    ? 'BbariBbarx_matrix.m'
    ? 'Create_NodalForces.m'
    ? 'Create_PwForces.m'
    ? 'Create_SimpleModel.m'
    ? 'Fs_matrix.m'
    ? 'Ks_matrix.m'
    ? 'Localize.m'
    ? 'Q0_vector.m'
    ? 'V0_vector.m'
  Analysis_Functions:
    Static: &Basic-Analysis-Static
      ? 'Plastic_Analysis_wLBT.m'
      ? 'Plastic_Analysis_wUBT.m'
  Solution_Scripts: &Basic-Solution_Scripts
    ? 'S_Check_Global3dEQ.m'
    ? 'S_DisplMethod.m'
    ? 'S_ForceMethod.m'
  Element_Library: &Basic-Element_Library
    ? 'ElemLenOr.m'


NLABasic: &NLABasic
  General_Functions:
    <<: *Basic-General_Functions
    ? 'Add_Damping2State.m'
    ? 'Add_Mass2Model.m' 
    ? 'Aj_matrix.m'
    ? 'Condense_MV.m'
    ? 'Create_Damping.m'
    ? 'Create_Loading.m'
    ? 'Create_Model.m'
    ? 'Create_NodalMass.m'
    ? 'Extract_Str2ElState.m'
    ? 'Structure.m'
    ? 'SubIncr4ElemntSD.m'
  Analysis_Functions:
    Static:
      <<: *Basic-Analysis-Static
      ? 'Event2Event_NLAnalysis.m'
      ? 'Increment.m'
      ? 'Initialize.m'
      ? 'Initialize_SolStrat.m'
      ? 'Initialize_State.m'
      ? 'Iterate.m'
      ? 'LinearStep.m'
      ? 'LoadFactorControl.m'
      ? 'LoadFactorIncrement.m'
      ? 'OneIteration.m'
      ? 'PlasticAnalysis.m'
      ? 'StateDetermination.m'
      ? 'Update_State.m'
    Dynamic:
      # From /Solution_Library
      ? 'OneTransientIteration.m' 
      ? 'TimeIntegrationConstants.m'
      ? 'TransientIncrement.m'
      ? 'TransientInitialize.m'
      ? 'TransientIterate.m'
      ? 'TransientStateDetermination.m'
      ? 'Update_TransientState.m'
      # From /Dynamics/
      ? 'AccelerationIntegral.m'
      ? 'EigenMode.m'
      ? 'ElasticResponseSpectrum.m'
      ? 'InelSDOF_Newmark.m'
      ? 'LSDOF_CentralDifference.m'
      ? 'LSDOF_LinearWilson.m'
      ? 'LSDOF_Newmark.m'
      ? 'ModalAnalysis.m'
      ? 'ModeDecomposition.m'
  Solution_Scripts:
    <<: *Basic-Solution_Scripts
    ? 'S_MomCurvAnalysis.m'
    ? 'S_NMAnalysis.m'
    ? 'S_NMAnalysiswSepLoadHist.m'
    # From /Solution_Library/Strategies
    ? 'S_InitialStep.m'
    ? 'S_MultiStep.m'
    ? 'S_MultiStep_wLoadHist.m'
    ? 'S_MultiStep_wLoadHistwSD.m'
    ? 'S_Transient_MultiStep.m'
    ? 'S_Transient_MultiStepwSD.m'
  Element_Library:
    <<: *Basic-Element_Library
    # From /Geometry
    ? 'DefGeom_2dFrm.m'
    ? 'DefGeom_3dFrm.m'
    ? 'GeomTran_2dFrm.m'
    ? 'GeomTran_3dFrm.m'
    ? 'GeomTran_Truss.m'
    ? 'kg_2dFrm.m'
    ? 'kg_3dFrm.m'
    ? 'kg_Truss.m'
    ? 'Large2du2v_Frm.m'
    ? 'Large3du2v_Frm.m'
    ? 'TranJnt.m'
    # From /Element_Library
    ? 'ElementLoading.m'
    ? 'Extract_BasicEl2SecState.m'
    ? 'Extract_El2MatState.m'
    ? 'Extract_El2SecState.m'
    ? 'ExtrReshu.m'
    ? 'GPYS.m' 
    ? 'ElementLoading.m'
    # From /Element_Library/Frame_Elements/Linear
    ? 'LE2dFrm.m'
    ? 'LE2dFrm_wPdelta.m'
    ? 'LE3dFrm.m'
    ? 'LETruss.m'
    # From /Element_Library/Frame_Elements/ConcentratedInelastic
    ? 'BInel2dFrm_wEPLHM.m'
    ? 'BInel2dFrm_wEPLHNMYS.m'
    ? 'Inel2dFrm.m'
    ? 'InelTruss.m'
    # From /Element_Library/Frame_Elements/DistrInelastic
    ? 'Dinel2dFrm_EBwDF.m'
    ? 'Dinel2dFrm_EBwFF.m'
    # From /Element_Library/Special_Elements
    ? 'MaterialWrapper.m'
    ? 'SectionWrapper.m'
  Section_Library:
    ? 'Extract_Sec2MatState.m'
    ? 'HomoCircSecw1dMat.m'
    ? 'HomoRectSecw1dMat.m'
    ? 'HomoWFSecw1dMat.m'
    ? 'MultRectSecw1dMat.m'
    ? 'ReCircSecw1dMat.m'
    ? 'ReRectSecw1dMat.m'
  Material_Library:
    ? 'BilinElastic1dMat.m'
    ? 'BilinHyst1dMat.m'
    ? 'BilinInel1dMat.m'
    ? 'BilinOrOr1dMat.m'
    ? 'BilinPkOr1dMat.m'
    ? 'GMP1dMat.m'
    ? 'InelLPwLH1dMat.m'
    ? 'ManderConcr1dMat.m'
  

latest:
  <<: *NLABasic

  # Pre-Processing:
  #   Solution:
  #     - SolStrat = Initialize_SolStrat
  #   Section:
  #     - SecProp = AISC_Section (sect)
  #     - Shape = Create_RectShape (ndm,SType,Data)
  #     - Shape = Create_ShapewMat (SType,Data)
  #     - Shape = Create_IPMesh4MultRectShape (Shape,MeshData)

  #     - SecData = Add_Bars2Section (SecData,BarAyz,MatName,MatData,CrdOr)
  #     - SecData = Add_Shape2Section (SecData,Shape,CrdOr)
  #     - \[yfib,wfib] = MP1dInt4Circ (R,nrfib)
  #     - \[yfib,zfib] = CircLayer2Bar (R,nb,Phi)
  #     - \[yfib,zfib,wfib] = MP2dInt4Circ (R,nrfib,nthfib,MeshOpt)
  #     - \[yfib,zfib,wfib] = Rectangle2Fiber (patcoor,IntTyp,nyfib,nzfib)  
  #     - \[yfib,zfib,wfib,MatID] = Create_IPMesh4Circ (SecData)
  #     - \[yfib,zfib,wfib,MatID] = Create_IPMesh4Rect (SecData)
  #     - \[yfib,zfib,wfib,MatID] = Create_IPMesh4WFShape (SecData)
  #     - \[R1,R2,thfib,dth] = Create_MPMesh4Circ (Ri,Ro,nrfib,nthfib,MeshOpt)
  #     - FibAyz = Create_CircBarGrid (BarData)
  #     - FibAyz = Create_RectBarGrid (BarGeomData)
  #     - Shape = Create_MultRectShape (SType,Data)
  #     - yz = Create_RectPatch (ty,tz,sy,sz)
  #   Loading:
  #     - Pe = Create_Load4Frame (Frame,Pdis,index)
  #     - Pref = Create_NodalForces (Model,Pe)
  #     - Pw = Create_PwForces (Model,ElemData)
  #     - Loading = Create_Loading (Model,Pe,Ue)
  #     - LoadHist = Create_LoadHistory (RevVal,LHCase,T_Rev)
  #   Structure:
  #     - Model = Create_SimpleModel (XYZ,CON,BOUN,ElemName)
  #     - Model = Create_Model (XYZ,CON,BOUN,ElemName)

  #     - C = Create_Damping (type,Kf,Ml,zeta,mode)
  #     - Ml = Create_NodalMass (Model,Me)
  #     - Me = Create_Mass4Frame (Frame,Mdis,index)

  #     - Frame = Create_MRFrame (Lbv,Hsv,nsub)
  #     - Frame = Add_Brace2Frame (Frame,BayNo,BrType,EccR,StrRng,nsBr)
  #     - Frame = Add_GravityColumn2Frame (Frame)
  #     - Frame = Create_FrameSections (Frame,ColSect,GrdSect)
  #     - JntOff = Create_JntOffsets (Frame,DBase)

  #     - State = Initialize_State (Model,ElemData)
  #     - State = Add_Damping2State (type,Model,State,zeta,mode)s     
  #   Element:
  #     - \[ColElemData,GrdElemData] = ElemData4SteelFrame (Frame,Data,DBase,LUnit,Member)
  #     - BraceElemData = ElemData4SteelBraces (Frame,Data,DBase,LUnit)
  #     - BraceElemData = FiberElemData4SteelBraces (Frame,Data,DBase,LUnit)
  #     - \[ColElemData,GrdElemData] = FiberElemData4SteelFrame (Frame,Data,DBase,LUnit,Member)
  # Modeling_Library:
  #   Structure: 
  #     - Resp = Structure (action,Model,ElemData,State,ElemList)
  #   Element:
  #     - ElemResp = Dinel2dFrm_EBwDF (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = Dinel2dFrm_EBwFF (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = Inel2dFrm_wLHNMYS (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = Inel2dFrm_wLPPM (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = Inel2dFrm_wOneComp (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = Inel2dFrm_wTwoComp (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = InelTruss (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = LE2dFrm (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = LE2dFrm_wPdelta (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = LE3dFrm (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = LETruss (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = MaterialWrapper (action,el_no,xyz,ElemData,ElemState)
  #     - ElemResp = SectionWrapper (action,el_no,xyz,ElemData,ElemState)
  #   #Plane:
  #     - ElemResp = LE4nodeMindlinPlate (action,el_no,ndm,ElemData,xyz,ElemState)
  #     - ElemResp = LE4nodeQuadwIM (action,el_no,ndm,ElemData,xyz,ElemState)
  #     - ElemResp = LE4to9nodeQuad (action,el_no,ndm,ElemData,xyz,ElemState)
  #     - ElemResp = LE9nodeMindlinPlate (action,el_no,ndm,ElemData,xyz,ElemState)
  #     - ElemResp = LECST (action,el_no,ndm,ElemData,xyz,ElemState)
  #     - ElemResp = LELST (action,el_no,ndm,ElemData,xyz,ElemState)
  #   #Brick: 
  #     - ElemResp = LE8nodeBrick (action,el_no,ndm,ElemData,xyz,ElemState)
  #   Material:
  #     - MatResp = BilinElastic1dMat (action,MatNo,MatData,MatState)
  #     - MatResp = BilinHyst1dMat    (action,MatNo,MatData,MatState)
  #     - MatResp = BilinInel1dMat    (action,MatNo,MatData,MatState)
  #     - MatResp = BilinOrOr1dMat    (action,MatNo,MatData,MatState)
  #     - MatResp = BilinPkOr1dMat    (action,MatNo,MatData,MatState)
  #     - MatResp = GMP1dMat          (action,MatNo,MatData,MatState)
  #     - MatResp = InelJ2PwLH3dMat   (action,MatNo,MatData,MatState)
  #     - MatResp = InelLPwLH1dMat    (action,MatNo,MatData,MatState)
  #     - MatResp = ManderConcr1dMat  (action,MatNo,MatData,MatState)
  #     # Plane FEM
  #     - MatResp = LEIso2dMat (action,Mat_no,MatData,MatState)
  #     - MatResp = LEIso3dMat (action,Mat_no,MatData,MatState)
  #   Section:
  #     - SecResp = HomoCircSecw1dMat (action,SecNo,ndm,SecData,SecState)
  #     - SecResp = HomoRectSecw1dMat (action,SecNo,ndm,SecData,SecState)
  #     - SecResp = HomoWFSecw1dMat (action,SecNo,ndm,SecData,SecState)
  #     - SecResp = MultRectSecw1dMat (action,SecNo,ndm,SecData,SecState)
  #     - SecResp = ReCircSecw1dMat (action,SecNo,ndm,SecData,SecState)
  #     - SecResp = ReRectSecw1dMat (action,SecNo,ndm,SecData,SecState)
  # Solution_Library:
  #   I-I_Procedures:
  #     - \[Kfc,Pfc] = Condense_MV (Kf,idr,Pf)
  #     - LimitSurf = Create_PlastLimSurface (ElemName,ElemData)
  #     - \[lamdah,Qh,Ufh,Vph,Iph] = Event2Event_NLAnalysis (opt,Model,ElemData,Loading,ConvPar)
  #     - \[State,SolStrat] = Iterate (Model,ElemData,Loading,State,SolStrat)
  #     - SolStrat = LoadFactorControl (action,SolStrat,detKf,Pref,Ut,DUr)
  #     - Dlam = LoadFactorIncrement (History,Time,Deltat)
  #     - \[State,SolStrat] = Initialize (Model,ElemData,Loading,State,SolStrat)
  #     - \[State,SolStrat] = Increment (Model,ElemData,Loading,State,SolStrat)
  #     - \[State,SolStrat] = OneIteration (Model,ElemData,Loading,State,SolStrat)
  #     - \[State,SolStrat] = OneTransientIteration (Model,ElemData,Loading,State,SolStrat)
  #     - \[State,SolStrat] = TransientIterate (Model,ElemData,Loading,State,SolStrat)
  #     - \[State,SolStrat] = TransientIncrement(Model,ElemData,Loading,State,SolStrat)
  #     - State = LinearStep (Model,ElemData,Loading)
  #     - State = Update_State (Model,ElemData,State)
  #     - State = StateDetermination (StifUpdt,Model,ElemData,State)
  #     - ElemState = SubIncr4ElemntSD (el,ElemName,xyz,ElemData,ElemState)
  #   Plastic_Analysis:
  #     - \[lamdac,Qc,DUf,DVpl] = PlasticAnalysis (Model,ElemData,Loading,LPOpt)
  #     - \[lamdac,Qc] = PlasticAnalysis_wLBT (Bf,Qpl,Pref,Pcf,Options)
  #     - \[lamdac,DUf,DVhp] = PlasticAnalysis_wUBT (Af,Qpl,Pref,Pfc,Options)
  #   Transient_Analysis:
  #     - Int_Constants = TimeIntegrationConstants (TimeStrat,option)
  #     - State = TransientInitialize (Model,ElemData,Loading,State)
  #     - State = TransientStateDetermination (StifUpdt,Model,ElemData,State,Int_Constants)
  #     - State = Update_TransientState (Model,ElemData,State,SolStrat)

  #     - \[u,udot] = AccelerationIntegral (uddot,Deltat,nstep,u0,udot0)
  #     - \[omega,Ueig] = EigenMode (Kf,M,nmod)
  #     - \[D,Psv,Psa] = ElasticResponseSpectrum (Acceleration,T,zeta)
  #     - \[u,udot,uddot,pr] = InelSDOF_Newmark (Deltat,omega,p,InelSDFData,zeta,u0,udot0)
  #     - \[u,udot,uddot] = LSDOF_LinearWilson (Deltat,omega,p,zeta,u0,udot0)
  #     - \[u,udot,uddot] = LSDOF_Newmark (Deltat,omega,p,zeta,u0,udot0)
  #     - \[omega,Ueig,Y_t,Ydot_t,Yddot_t] = ModalAnalysis (option,Kf,M,Loading,Deltat,zeta,nmod)
  #     - \[Mmod,Ymod,Vmod] = ModeDecomposition (M,Ueig,V)
  # Utilities:
  #   io:
  #     - Print_PDFile (FName,FigOpt,PrOpt)
  #   Quadrature:
  #     - \[xIP,wIP] = Gauss (nIP)
  #     - \[xIP wIP] = Gauss2d (nIP)
  #     - \[xIP,wIP] = Lobatto (nIP)
  #     - \[xIP,wIP] = Midpoint (nIP)
  #     - \[xIP,wIP] = Simpson (nIP)
  #     - \[xIP,wIP] = Trap (nIP)
  #   Interpolation:
  #     - hp = Hermite (degree,deriv,xi)
  #     - hp = HermiteN(nn,deriv,xi)
  #     - lp = Lagrange (degree,deriv,xi)
  #     - lp = LagrangeN (nn,deriv,xi)
  # Post-Processing: # 
  #   Plotting:
  #     - FigH = Create_Window (dx,dy)
  #     - \[Font,lt,ls] = FontProp4PlotSection()
  #     - Draw_3dAxisCross (Xlim,Ylim,Zlim,PlotOpt)
  #     - varargout = Draw_Arrow (Astr,Aend,Aln,PlotOpt)
  #     - Draw_AxisCross (Xlim,Ylim,PlotOpt)
  #     - Draw_Cube (XYZc,Size,Color)
  #     - \[Line] = LineProp4PlotSection()
      
  #     - \[AxHngCoor,FlHngCoor] = Get_HngPos4DefoElem (XYiod,XYjod,xyd,HngOpt)
  #     - \[ModSc,maxL,minL] = Get_ModelScale (Model,Ratio)
  #     - Label_2dMoments (Model,Post,ElemList,Digit,Units)
  #     - Label_AxialForces (Model,Post,ElemList,Digit,Units)
  #     - Label_Model (Model,LblOpt)

  #     - Plot_2dCurvDistr (Model,ElemData,Post,ElemList,UserScale)
  #     - Plot_2dMomntDistr (Model,ElemData,Post,ElemList,UserScale)
  #     - Plot_AxialForces (Model,Post,ElemList,UserScale)
  #     - Plot_BounCond (XYZ,BOUN,BsClr,BsSz)
  #     - Plot_DeformedStructure (Model,ElemData,U,Post,PlotOpt)
  #     - Plot_Model (Model,U,MPlOpt)
  #     - Plot_NodalForces (Model,Loading,PlotOpt)
  #     - Plot_OpenPlasticHinges (Model,ElemData,Post,PlotOpt)
  #     - Plot_PlasticHinges (Model,ElemData,U,Post,PlotOpt)
  #     - Plot_Releases (Model,ElemData,U,PlotOpt)
  #     - Plot_ElemLoading (Model,ElemData,PlotOpt)
  #     - Plot_ForcDistr (Model,ElemData,Post,Component,ElemList,UserScale)
  #     - Plot_Hinge4Elem (nq,HngId,AxHngCoor,FlHngCoor,Colors)
  #     - Plot_IPVarDistr (Model,ElemData,Post,Component,ElemList,UserScale)

  #     - Plot_SectionGeometry (SecData,PlotOpt)
  #     - Plot_Mesh4Circ (SecData)
  #     - Plot_Mesh4MultRectShape (SecData)

      
  #     - Plot_QuadStress (Model,Post,type,comp,BlkLst)
  #     - Plot_TriStress (Model,Post,type,comp,Blk)

  #     - AxHndl = Plot_StoryDistr (Xp,PlotOpt)
  #     - AxHndl = Plot_XYData (Xp,Yp,PlotOpt)
  #     - AxHndl = Plot_DispPath (DspHst,PlotOpt)
  #     - AxHndl = Plot_LoadHistory(DspHst,FrcHst,PlotOpt)
      
  #     - Animate_EventSequence (Model,ElemData,Ufh,Qh,PlotOpt)
  #     - Animate_ResponsewHngHist (Model,ElemData,Post,PlotOpt) 
  #   Structure:
  #     - Post = Add_OpenPHIndx2Post (Model,Post)
  #     - Post = Q2Post (Model,Q)
  #     - HFlrTrans = Get_HFlrTrans ( Model,Frame,Post )
  #     - RIDrift = Get_RIStDrift ( Model,Frame,Post )
  #     - StShear = Get_StShear (Model,ElemData,Frame,Post,GravCol)
  #   Element:
  #     - ElemState = Extract_Str2ElState  (el,id,State)
  #   Section:
  #     - SecState  = Extract_BasicEl2SecState (sec,ae,ElState)
  #     - SecState  = Extract_El2SecState  (sec,ae,ElemState)
  #   Material:
  #     - MatState  = Extract_Sec2MatState (m,as,SecState)
  #     - MatState  = Extract_El2MatState  (mat,aeps,ElState,rd)
  # Introspection:
  #   Structure:
  #     - A  = A_matrix (Model)
  #     - B  = B_matrix (Model)
  #     - V0 = V0_vector (Model,ElemData,Roption)
  #     - Q0 = Q0_vector (Model,ElemData)
  #     - Qpl = ElemData2Qpl (Model,ElemData)
  #     - Fs = Fs_matrix (Model,ElemData,Roption)
  #     - Ks = Ks_matrix (Model,ElemData)
  #     - Aj = Aj_matrix (Model)
  #     - ied = D_index  (Model)
  #     - iced = H_index (Model,ElemData)
  #     - \[Bbari,Bbarx,ind_x] = BbariBbarx_matrix (Bf,ind_r)
  #     - \[Q,Ve] = Complete_QV (Model,ElemData,Qin)
  #   Section:
  #     - \[Outline,A,sy,sz] = Create_ISecOutline (Data)
  #     - \[Outline,A,sy,sz] = Create_LSecOutline (Data)
  #     - \[Outline,A,sy,sz] = Create_BoxOutline (Data)
  #     - \[Outline,A,sy,sz] = Create_BoxwOvhOutline (Data)
  #     - \[Outline,A,sy,sz] = Create_CSecOutline (Data)      
  #     - \[Outline,A,sy,sz] = Create_RectwCovOutline (Data)
  #     - \[Outline,A,sy,sz] = Create_SSecOutline (Data)
  #     - \[Outline,A,sy,sz] = Create_TSecOutline (Data)
  #     - \[Outline,A,sy,sz] = Create_RectOutline (Data)
  #   Element:
  #     - wC = ElementLoading (w0,lamda,LdId)
  #     - y = Check3dFrmAxes (el,y,xyz)
  #     - \[xyz,id] = Localize (Model,el)
  #     - \[L,T] = DefGeom_2dFrm (xyz)
  #     - \[L,T] = DefGeom_3dFrm (xyz,GeomData,u)
  #     - \[L,dcx] = ElmLenOr (xyz)
  #     - \[XYd,xyd] = DeformShape2dFrm (xyz,ElemData,u,v,MAGF,nsub)
  #     - \[XYd,xyd] = DeformShape2dFrm_wCurvIntp (xyz,ElemData,u,EPost,MAGF,nsub)
  #     - \[XYd,xyd] = DeformShape2dFrm_wDispIntp (xyz,ElemData,u,v,MAGF,nsub)
  #     - \[u,Du,DDu] = ExtrReshu (State,ndf,nen)
  #     - \[f,g,h] = GPYS (GPYSC,xyz,ScVec)
  #     - \[ag,bg,v,Dv,DDv] = GeomTran_Truss (option,xyz,u,Du,DDu)
  #     - \[ag,bg,ab,v,Dv,DDv] = GeomTran_2dFrm (option,xyz,GeomData,u,Du,DDu)
  #     - \[ag,bg,ab,v,Dv,DDv] = GeomTran_3dFrm (option,xyz,GeomData,u,Du,DDu)
  #     - v = Large2du2v_Frm (xyz,u)
  #     - \[v,vthetaI,vthetaJ] = Large3du2v_Frm (xyz,GeomData,u)
  #     - aj = TranJnt (jntoff)
  #     - kg = kg_2dFrm (option,xyz,u,q)
  #     - kg = kg_3dFrm (option,xyz,GeomData,u,q,ElLoad)
  #     - kg = kg_Truss (option,xyz,u,q)
  #   #Plane:
  #     - \[N,dNdx,J] = shape2d (nat,xyz,nodix)
  #     - \[N,dNdx,J] = shape3d (nat,xyz)
  #     - \[N,dNdx,J] = shapeCST (xyz)
  #     - \[N,dNdx,J] = shapeLST (xi,xyz)
  #   Other:
  #     - \[DspHst,FrcHst] = Create_DispCyclewN (DspPat,Options)
  #     - \[DspHst,FrcHst] = Create_MultDispCycleswN (DspPat,Ucyc,Ncyc,TmStr,Options)


